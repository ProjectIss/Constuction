@model issDomain.Models.ToolsMaster

@{
    ViewBag.Title = "Edit";
}

<style>
    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="panel-group">

    <div class="panel panel-heading header">
        Tools - Edit Page
    </div>
    <div class="panel panel-body">
        <span>@ViewBag.ToolsName</span>
        <div class="row">
            <div class="form-group col-md-6">
                <label>Tools Name</label>
                @Html.EditorFor(model => model.ToolsName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToolsName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label>UOM</label>
                <select class="form-control" id="UOM" name="UOM">
                    <option>Bags</option>
                    <option>Numbers</option>
                    <option>Meter</option>
                    <option>Cft </option>
                    <option>Cft </option>
                    <option>Kg</option>
                    <option>Litre</option>
                    <option>Sqft</option>
                    <option>Brass</option>
                    <option>Cum</option>
                    <option>Tonne</option>
                    <option>Quintal</option>
                    <option>Box</option>
                    <option>Mm</option>
                    <option>Cm</option>
                    <option>Ft</option>
                    <option>In</option>
                    <option>Sqm</option>
                    <option>Gram</option>
                    <option>Lb</option>
                    <option>Kilolitre</option>
                </select>
            </div>
            <div class="form-group col-md-6">
                <label> Category</label>
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label> Godown Name</label>
                @Html.DropDownList("godownNameid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.godownNameid, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label>Opening Stock</label>
                @Html.EditorFor(model => model.openingStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.openingStock, "", new { @class = "text-danger" })
            </div>


        </div>
        <div class="form-group" style="float:right">

            <input type="submit" value="Submit" class="btn btn-default" />
            @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })

        </div>
    </div>


</div>

}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



@*<h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ToolsMaster</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.ToolsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToolsName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToolsName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.openingStock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.openingStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.openingStock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isDeleted)
                        @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdateBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdateBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
