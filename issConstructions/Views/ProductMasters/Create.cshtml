@model issDomain.Models.ProductMaster

@{
    ViewBag.Title = "Create";
}

<style>
    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }
    input, select, textarea {
        max-width: 500px;
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="panel-group">
        <div class="panel panel-heading header">
            Product - Add Page
        </div>
        <div class="panel panel-body" style="overflow:auto">
            <div class="row">

                <div class="form-group col-md-6">
                    <label>Product Name</label>
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>UOM</label>
                    <select class="form-control" id="UOM" name="UOM">
                        <option>Bags</option>
                        <option>Numbers</option>
                        <option>Meter</option>
                        <option>Cft </option>
                        <option>Cft </option>
                        <option>Kg</option>
                        <option>Litre</option>
                        <option>Sqft</option>
                        <option>Brass</option>
                        <option>Cum</option>
                        <option>Tonne</option>
                        <option>Quintal</option>
                        <option>Box</option>
                        <option>Mm</option>
                        <option>Cm</option>
                        <option>Ft</option>
                        <option>In</option>
                        <option>Sqm</option>
                        <option>Gram</option>
                        <option>Lb</option>
                        <option>Kilolitre</option>
                    </select>
                    @*@Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })*@
                </div>

                <div class="form-group col-md-6">
                    <label>Category</label>
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Tax</label>
                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group" style="float:right">

                <input type="submit" value="Submit" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })

            </div>
        </div>
    </div>


}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*<h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ProductMaster</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isDeleted)
                        @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdateBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdateBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
